{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "@classmethod/eslint-config/typescript",
    "@classmethod/eslint-config/react",
    "plugin:tailwindcss/recommended",
    "plugin:react-hooks/recommended",
    "plugin:storybook/recommended"
  ],
  "parserOptions": {
    "project": ["./tsconfig.json"],
    "tsconfigRootDir": "./"
  },
  "rules": {
    "@typescript-eslint/array-type": [
      "error",
      { "default": "array", "readonly": "generic" }
    ],
    "@typescript-eslint/consistent-type-definitions": ["error", "type"],
    "@typescript-eslint/prefer-ts-expect-error": "error",
    "@typescript-eslint/strict-boolean-expressions": [
      "error",
      {
        "allowString": false,
        "allowNumber": false,
        "allowNullableObject": false,
        "allowNullableBoolean": false,
        "allowNullableString": false,
        "allowNullableNumber": false,
        "allowAny": false
      }
    ],
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "caughtErrorsIgnorePattern": "^_",
        "destructuredArrayIgnorePattern": "^_"
      }
    ],
    "eqeqeq": ["error", "always", { "null": "ignore" }],
    "func-style": "error",
    "quotes": ["error", "double", { "avoidEscape": true }],
    "react/jsx-curly-brace-presence": "error",
    "react/prop-types": "off",
    "react-hooks/exhaustive-deps": "warn",
    "react-hooks/rules-of-hooks": "error"
  }
}
